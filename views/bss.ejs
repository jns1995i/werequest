<% layout('layout') %>
    <head>
        <style>
            td {
                font-size: 0.8vw;
            }
            .mainf {
                position: relative;
            }
        </style>
    </head>
    
    <% businesses.forEach(business => { %>
<div id="editFormContainer" class=" unseen" style="background-color: rgba(0, 0, 0, 0.2);">
    <form action="/update-business/<%= business._id %>" method="POST" class="flex col alignStart" style="width: 40%; padding: 50px;">
        <p class="size40 str400">UPDATE BUSINESS</p>

        <!-- Business Name -->
        <label for="businessName">Business Name</label>
        <input type="text" id="businessName" name="businessName" required>

        <!-- Business Type -->
        <label for="businessType">Established Date</label>
        <input type="date" id="estDate" name="estDate" required>

        <!-- Business Type -->
        <label for="businessType">Business Type</label>
        <input type="text" id="businessType" name="businessType" required>

        <!-- Owner Name -->
        <label for="ownerName">Owner Name</label>
        <div class="selectBar widthMax100">
            <select name="ownerName" id="ownerNameSelect" required>
                <% if (residents && residents.length > 0) { %>
                    <% residents.forEach((resident) => { %>
                        <option value="<%= resident._id %>" <%= business.ownerName == resident._id ? 'selected' : '' %>>
                            <%= resident.firstName %> <%= resident.middleName %> <%= resident.lastName %>
                        </option>
                    <% }) %>
                <% } else { %>
                    <option disabled>No residents found</option>
                <% } %>
            </select>
        </div>


        <br>
        <div class="height0 gap5">
            <button class="nav fnav" type="button" onclick="closeEditForm()">Cancel</button>
            <button class="nav fnav pnav" type="submit">Update Business</button>
        </div>
    </form>
</div>
<% }) %>




<script>
    function closeEditForm() {
        document.getElementById('editFormContainer').classList.add('unseen');
    }

    function editBusiness(id, businessName, businessType, ownerId, contactNumber, houseNo, purok) {
        const formContainer = document.getElementById('editFormContainer');
        formContainer.classList.remove('unseen');

        const form = formContainer.querySelector('form');
        form.action = `/update-business/${id}`;

        document.getElementById('businessName').value = businessName;
        document.getElementById('estDate').value = estDate; // This is the corrected line
        document.getElementById('businessType').value = businessType;

        // Find and set the correct owner in the select dropdown
        const ownerSelect = document.getElementById('ownerNameSelect');
        for (let i = 0; i < ownerSelect.options.length; i++) {
            if (ownerSelect.options[i].value === ownerId) {
                ownerSelect.selectedIndex = i;
                break;
            }
        }
    }
</script>


<div class="bgSoft unseen" id="newCard">
    <form action="/add-business" method="POST" class="relative" style="height: auto; width: 50%; padding: 50px; position: relative; border-radius: 10px;">
    <a href="javascript:void(0)" class="nav cnav absolute right20 top20" id="closeBtn">
        <i class="fas fa-times"></i>
    </a>
    <div class="height0 gap30">
        <div class="height0 col gap15">
            <div class="row head">
                <p class="size34 str400 green">New Business</p>
            </div>
            <hr>
            <div class="row">
                <div class="field">
                    <label>Owner's Name</label>
                    <div class="selectBar">
                        <select name="ownerName" id="" required>
                            <% if (residents && residents.length > 0) { %>
                                <% residents.forEach((resident) => { %>
                                    <option value="<%= resident._id %>">
                                        <%= resident.firstName %> <%= resident.middleName %> <%= resident.lastName %>
                                    </option>
                                <% }) %>
                            <% } else { %>
                                <option disabled>No residents found</option>
                            <% } %>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="field">
                    <label>Established Date</label>
                    <input type="date" name="estDate" placeholder="e.g. Coffee Shop, Gasoline Store" required>
                </div>
            </div>
            <div class="row">
                <div class="field">
                    <label>Business Name</label>
                    <input type="text" name="businessName" placeholder="Enter business name" required>
                </div>
            </div>
            <div class="row">
                <div class="field">
                    <label>Business Type</label>
                    <input type="text" name="businessType" placeholder="e.g. Coffee Shop, Gasoline Store" required>
                </div>
            </div>
            <div class="row">
                <div class="field">
                    <label>House No.</label>
                    <input type="text" name="houseNo" placeholder="Enter house number" required>
                </div>
                <div class="field">
                    <label>Purok</label>
                    <div class="selectBar">
                        <select name="purok" required>
                            <option value="">Select</option>
                                <option value="Purok 1">Purok 1</option>
                                <option value="Purok 2">Purok 2</option>
                                <option value="Purok 3">Purok 3</option>
                                <option value="Purok 4">Purok 4</option>
                                <option value="Purok 5">Purok 5</option>
                                <option value="Purok 6">Purok 6</option>
                                <option value="Purok 7">Purok 7</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="justifyEnd" style="flex-direction: row;">
                    <button class="nav fnav pnav width0" type="submit">Add Now</button>
                </div>
            </div>
        </div>
    </div>
    </form>
</div> 

    <div class="height0 justifyBetween padding10">
        <div class="height0 justifyStart">
            <p class="size28 colorPrimary str500">Business Management</p>
        </div>
        <div class="searchBar width35">
            <input type="search" id="univ">
            <i class="fas fa-search"></i>
        </div>
        <div class="height0 justifyEnd gap10">
                    <a href="/export-business" class="nav">
                        Export
                    </a>  
            <a href="javascript:void()"  id="newBtn" class="nav borderNone paddingBlock10 borderRadius10 orgBtn">Add Business</a>
        </div>
    </div>
     
        <br>

        <div class="main bgSoft borderRadius10 height55">


            <div class="section tableCard">
                <p class="p14" id="noRecords" style="display: none;">No Records</p>
                <table id="dirTable">
                    <thead>
                        <tr>
                            <th style="width: 25%;">Owner's Name</th>
                            <th style="width: 25%;">Business Name</th>
                            <th style="width: 25%;">Address</th>
                            <th style="width: 20%;">Nature of Business</th>
                            <th style="width: 15%;">Established</th>
                            <th onclick="sortTable(5)" class="thCtrl" style="width: 30%;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% businesses.forEach(business => { %>
                            <tr>
                                <% if (business.owner) { %>
                                    <td><%= business.owner.firstName %> <%= business.owner.lastName %></td>
                                <% } else { %>
                                    <td>Unknown Owner</td>
                                <% } %>
                                <td><%= business.businessName %></td>
                                <% if (business.owner) { %>
                                    <td><%= business.owner.houseNo %> <%= business.owner.purok %></td>
                                <% } else { %>
                                    <td>Unknown Owner</td>
                                <% } %>
                                <td><%= business.businessType %></td>
                                <td><%= business.estDate %></td>
                                <td class="tdCtrl">
                                    <a href="/viewBus/<%= business._id %>" class="nav">
                                        <i class="fas fa-eye inline"></i> Permit
                                    </a>
                                    <a href="javascript:void()" class="nav" onclick="editBusiness('<%= business._id %>', '<%= business.businessName %>', '<%= business.businessType %>', '<%= business.estDate ? new Date(business.estDate).toISOString().split("T")[0] : "" %>', '<%= business.ownerName %>', '<%= business.contactNumber %>', '<%= business.houseNo %>', '<%= business.purok %>')">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                    <form action="/delete-business/<%= business._id %>" method="POST" onsubmit="return confirm('Are you sure you want to archive this business?');" class="vers">
                                        <button type="submit" class="nav dnav-fill"><i class="fas fa-archive inline"></i> &nbsp; Archive</button>
                                    </form>                                    
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
    </div>
</div>
        
        <div class="sub height0 row flex">
            <div class="ctrl left height0 width50">
                <span id="totalRecords" class="totalRecords green"></span>
            </div>
            <div class="ctrl right height0 width50">
                <p>
                    Display Per Page:
                </p>
                <div class="selectBar" style="width: 70px;"> 
                    <select id="rowsPerPage" onchange="updateRowsPerPage()" style="width: 100px">
                        <option value="10">10</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="1000000000000">All</option>
                    </select>
                </div>
                <div class="pagination" id="pagination"></div>
            </div>
        </div>
    <script>
        document.getElementById('newBtn').addEventListener('click', function() {
            var newCard = document.getElementById('newCard');
            if (newCard.classList.contains('unseen')) {
                newCard.classList.remove('unseen');
                newCard.classList.add('seen');
            }
        });
    
        document.getElementById('closeBtn').addEventListener('click', function() {
            var newCard = document.getElementById('newCard');
            if (newCard.classList.contains('seen')) {
                newCard.classList.remove('seen');
                newCard.classList.add('unseen');
            }
        });
    </script>
            
    <script>
        function enforceNumericInput(event) {
            event.target.value = event.target.value.replace(/[^0-9]/g, '').slice(0, 11);
        }

        document.addEventListener('DOMContentLoaded', () => {
            const phoneInputs = document.querySelectorAll('.phone');
            phoneInputs.forEach(input => {
                input.addEventListener('input', enforceNumericInput);
            });
        });
    </script>

<script>document.addEventListener("DOMContentLoaded", function() {
    const dirTable = document.getElementById("dirTable");
    const tableBody = dirTable.getElementsByTagName("tbody")[0];
    const paginationContainer = document.getElementById("pagination");
    const rowsPerPageSelect = document.getElementById("rowsPerPage");
    const totalRecordsLabel = document.getElementById("totalRecords");
    const searchInput = document.getElementById("univ");
    const noRecordsMessage = document.getElementById("noRecords");
    const subDiv = document.querySelector(".sub");

    let currentPage = 1;
    let rowsPerPage = parseInt(rowsPerPageSelect.value);
    let allRows = Array.from(tableBody.rows);
    let filteredRows = allRows;

    function renderTable() {
        const start = (currentPage - 1) * rowsPerPage;
        const end = start + rowsPerPage;

        if (filteredRows.length === 0) {
            dirTable.style.display = "none";
            noRecordsMessage.style.display = "block";
        } else {
            dirTable.style.display = "table";
            noRecordsMessage.style.display = "none";
        }

        if (filteredRows.length <= 5) {
            subDiv.style.display = "none";
        } else {
            subDiv.style.display = "flex";
        }

        allRows.forEach(row => (row.style.display = "none"));
        filteredRows.slice(start, end).forEach(row => (row.style.display = ""));

        totalRecordsLabel.innerText = `Total Records: ${filteredRows.length}`;
        renderPagination(filteredRows.length);
    }
 
function renderPagination(totalRows) {
    paginationContainer.innerHTML = "";

    if (searchInput.value.trim()) return;

    const totalPages = Math.ceil(totalRows / rowsPerPage);
    if (totalPages <= 1) return;

    // Previous Button
    const prevButton = document.createElement("button");
    prevButton.innerHTML = "« Previous";
    prevButton.disabled = currentPage === 1;
    prevButton.onclick = () => {
        currentPage--;
        renderTable();
        renderPagination(totalRows); // Re-render pagination after page change
    };
    paginationContainer.appendChild(prevButton);

    // --- New Logic for displaying a limited number of page buttons ---

    // Display all buttons if total pages are 7 or less
    if (totalPages <= 7) {
        for (let i = 1; i <= totalPages; i++) {
            const pageButton = document.createElement("button");
            pageButton.innerHTML = i;
            pageButton.className = i === currentPage ? "active" : "";
            pageButton.onclick = () => {
                currentPage = i;
                renderTable();
                renderPagination(totalRows);
            };
            paginationContainer.appendChild(pageButton);
        }
    } else { // Display condensed pagination for more than 7 pages
        const startPages = [1, 2, 3];
        const endPages = [totalPages - 2, totalPages - 1, totalPages];
        const middlePages = [currentPage - 1, currentPage, currentPage + 1];

        // Function to create a page button
        const createPageButton = (page, isEllipsis = false) => {
            const btn = document.createElement("button");
            btn.innerHTML = isEllipsis ? "..." : page;
            btn.disabled = isEllipsis;
            if (!isEllipsis) {
                btn.className = page === currentPage ? "active" : "";
                btn.onclick = () => {
                    currentPage = page;
                    renderTable();
                    renderPagination(totalRows);
                };
            }
            return btn;
        };

        // Add first pages
        for (const page of startPages) {
            if (page <= totalPages) {
                paginationContainer.appendChild(createPageButton(page));
            }
        }
        
        // Add ellipsis if current page is not near the start
        if (currentPage > 4) {
            paginationContainer.appendChild(createPageButton("...", true));
        }

        // Add middle pages (current page and its neighbors)
        if (currentPage > 3 && currentPage < totalPages - 2) {
            for (const page of middlePages) {
                if (page > 0 && page <= totalPages) {
                    paginationContainer.appendChild(createPageButton(page));
                }
            }
        }

        // Add ellipsis if current page is not near the end
        if (currentPage < totalPages - 3) {
            paginationContainer.appendChild(createPageButton("...", true));
        }

        // Add last pages
        for (const page of endPages) {
            if (page > 3) {
                paginationContainer.appendChild(createPageButton(page));
            }
        }
    }

    // Next Button
    const nextButton = document.createElement("button");
    nextButton.innerHTML = "Next »";
    nextButton.disabled = currentPage === totalPages;
    nextButton.onclick = () => {
        currentPage++;
        renderTable();
        renderPagination(totalRows); // Re-render pagination after page change
    };
    paginationContainer.appendChild(nextButton);
}
    function updateRowsPerPage() {
        rowsPerPage = parseInt(rowsPerPageSelect.value);
        currentPage = 1;
        renderTable();
    }

    function searchTable() {
        const query = searchInput.value.toLowerCase().trim();
        filteredRows = allRows.filter(row =>
            Array.from(row.cells).some(cell => cell.textContent.toLowerCase().includes(query))
        );

        currentPage = 1;
        //rowsPerPageSelect.style.display = query ? "none" : "block";
        renderTable();
    }

    rowsPerPageSelect.addEventListener("change", updateRowsPerPage);
    searchInput.addEventListener("input", searchTable);
    renderTable();
});
</script>